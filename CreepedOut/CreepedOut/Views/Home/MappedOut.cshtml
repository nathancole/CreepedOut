
@{
    ViewBag.Title = "MappedOut";
}

<link href="~/Content/creeped-out-map.css" rel="stylesheet" />

<style type="text/css">
    
</style>

<div style="position: fixed; top: 50px; bottom: 0; left: 0; right: 0" id="container"></div>
<div style="position: fixed; top: 50px; bottom: 0; left: 0; right: 0; pointer-events: none;">

    <div class="input-panel">

        <input class="form-control" id="search-text" placeholder="buzz words" type="text" style="pointer-events: all;" />
        
    </div>

    <div style="display: none">
        <div id="currentInfo">
            <span id="year1990" class="year">1990</span>
            <span id="year1995" class="year">1995</span>
            <span id="year2000" class="year">2000</span>
        </div>
        <div id="title">
            Creepy People
        </div>
    </div>
    <img class="map-logo" src="~/img/co-logo-lt-trans.png" />
    @*<a id="ce" href="http://www.chromeexperiments.com/globe">
        <img src="~/img/co-logo-lt-trans.png" />
    </a>*@
</div>
<script type="text/javascript" src="~/Scripts/Detector.js"></script>
<script type="text/javascript" src="~/Scripts/three.min.js"></script>
<script type="text/javascript" src="~/Scripts/Tween.js"></script>
<script type="text/javascript" src="~/Scripts/globe.js"></script>
<script src="~/Scripts/jquery-2.2.3.min.js"></script>
<script src="~/Scripts/creepy-search.js"></script>
<script type="text/javascript">

    if(!Detector.webgl){
      Detector.addGetWebGLMessage();
    } else {

      var years = ['1990','1995','2000'];
      var container = document.getElementById('container');
      var globe = new DAT.Globe(container);

      console.log(globe);
      var i, tweens = [];

      var settime = function(globe, t) {
        return function() {
          new TWEEN.Tween(globe).to({time: t/years.length},500).easing(TWEEN.Easing.Cubic.EaseOut).start();
          var y = document.getElementById('year'+years[t]);
          if (y.getAttribute('class') === 'year active') {
            return;
          }
          var yy = document.getElementsByClassName('year');
          for(i=0; i<yy.length; i++) {
            yy[i].setAttribute('class','year');
          }
          y.setAttribute('class', 'year active');
        };
      };

      for(var i = 0; i<years.length; i++) {
        var y = document.getElementById('year'+years[i]);
        y.addEventListener('mouseover', settime(globe,i), false);
      }

      var xhr;
      TWEEN.start();


      // xhr = new XMLHttpRequest();
      // xhr.open('GET', '/population909500.json', true);
      // xhr.onreadystatechange = function(e) {
      //   if (xhr.readyState === 4) {
      //     if (xhr.status === 200) {
      //       var data = JSON.parse(xhr.responseText);
      //       window.data = data;
      //       for (i=0;i<data.length;i++) {
      //         globe.addData(data[i][1], {format: 'magnitude', name: data[i][0], animated: true});
      //       }
      //       globe.createPoints();
      //       settime(globe,0)();
      //       globe.animate();
      //       document.body.style.backgroundImage = 'none'; // remove loading
      //     }
      //   }
      // };
      // xhr.send(null);

      xhr2 = new XMLHttpRequest();
      xhr2.open('GET', 'http://creepedout.azurewebsites.net/odata/CreepyThings', true);
      xhr2.onreadystatechange = function(e) {
        if (xhr2.readyState === 4) {
            if (xhr2.status === 200) {
                var value = 0;
            var data = JSON.parse(xhr2.responseText);
            var arry = [];
            var group = {};
            var maxGroupCount = 0;
            for (i=0;i<data.value.length;i++) {
              if(data.value[i].Latitude)
              {
                var key = data.value[i].Latitude + '|' + data.value[i].Longitude;
                if(!group[key]) {
                    value = Math.min(value  + 0.1, 1);
                    group[key] = { 'lat': data.value[i].Latitude, 'lng': data.value[i].Longitude, 'value': value, 'itemCount': 1 };
                }
                else
                {
                  group[key].value += Math.random();
                  group[key].itemCount += 1;
                }
                
                maxGroupCount = Math.max(maxGroupCount, group[key].itemCount);
              }
            }
            console.log('maxGroupCount: ' + maxGroupCount);
            //loop through the grouped items and format them
            for(key in group)
            {
                if(group.hasOwnProperty(key))
                {
                    arry.push(group[key].lat);
                    arry.push(group[key].lng);
                    arry.push(group[key].value / maxGroupCount);
                    // arry.push(data.value[i].Latitude);
                    // arry.push(data.value[i].Longitude);
                    // arry.push((Math.random() ));
                }
            }

            var formattedData = [["sample", arry]];
            window.data = formattedData;
            for (i=0;i<formattedData.length;i++) {
              globe.addData(formattedData[i][1], {format: 'magnitude', name: formattedData[i][0], animated: true});
            }
            globe.createPoints();
            settime(globe,0)();
            globe.animate();
            document.body.style.backgroundImage = 'none'; // remove loading
          }
        }
      };
      xhr2.send(null);
    }

</script>